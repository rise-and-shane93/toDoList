{"version":3,"sources":["app/components/Header.js","app/components/Item.js","app/components/Footer.js","app/components/ShowMore.js","App.js","serviceWorker.js","index.js"],"names":["Header","handleSubmit","e","_this","itemInput","current","value","date","Date","h","getHours","m","getMinutes","s","getSeconds","currTime","concat","preventDefault","props","addItem","parseFloat","itemSelect","currentTarget","reset","alert","sortItemFunc","sortItem","itemSort","React","createRef","this","length","showHideFunc","_this2","react_default","a","createElement","onSubmit","type","name","id","placeholder","ref","htmlFor","onClick","showOrHide","className","count","Component","Item","numbertoItem","num","lengthMinusOne","priority","showHideItem","index","btnOpen","classes","desc","time","removeItem","Footer","ShowMore","disp","showItemFunc","clicked","App","state","list","showMoreBtn","prevListItemId","handleRemoveItem","setState","prevState","filter","l","handleAddItem","listItem","itemPriority","Object","toConsumableArray","itemTime","handleShowMore","bool","showItems","handleSortList","sort","b","parse","components_Header","map","item","components_Item","key","toString","components_ShowMore","components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e4f8ae75.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n//import ReactDOM from 'react-dom';\r\n\r\nclass Header extends Component {\r\n\r\n\r\n    showOrHide() {\r\n        // console.log(this.props.length);\r\n        // console.log(this.props.length + 1);\r\n        if (this.props.length >= 5) {\r\n            this.props.showHideFunc(true);\r\n        }\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        //console.log(this.props.length + 1);\r\n        if (this.itemInput.current.value !== \"\") {\r\n            let date = new Date();\r\n            let h = date.getHours();\r\n            let m = date.getMinutes();\r\n            let s = date.getSeconds();\r\n            let currTime = `${h}:${m}:${s}`;\r\n            e.preventDefault();\r\n            this.props.addItem(this.itemInput.current.value, parseFloat(this.itemSelect.current.value), currTime);\r\n            e.currentTarget.reset();    \r\n        } else {\r\n            e.preventDefault();\r\n            alert(\"Please give your task a description\");\r\n        }\r\n    }\r\n\r\n    sortItemFunc = (e) => {\r\n        e.preventDefault();\r\n        this.props.sortItem(this.itemSort.current.value);\r\n        e.currentTarget.reset();    \r\n    }\r\n\r\n    itemInput = React.createRef();\r\n\r\n    itemSelect = React.createRef();\r\n\r\n    itemSort = React.createRef();\r\n\r\n    render() {\r\n        return (\r\n            <header>\r\n                <h1>To-Do List</h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <input type=\"text\" name=\"desc\" id=\"desc\" placeholder=\"Task Description\"\r\n                        ref={this.itemInput}\r\n                    />\r\n                    <div>\r\n                        <label htmlFor=\"priority\">Priority: </label>\r\n                        <select name=\"priority\" id=\"priority\" ref={this.itemSelect}>\r\n                            <option value=\"1\">Low</option>\r\n                            <option value=\"2\">Medium</option>\r\n                            <option value=\"3\">High</option>\r\n                        </select>\r\n                    </div>\r\n                    <button type=\"submit\" onClick={\r\n                        () => this.showOrHide()\r\n                    }>Add!</button>\r\n                </form>\r\n                <div className=\"header-bottom\">\r\n                    <p>Items on list: <span>{this.props.count}</span></p>\r\n                    <form onSubmit={this.sortItemFunc}>\r\n                        <label htmlFor=\"sort\">Sort by: </label>\r\n                        <select name=\"sort\" id=\"sort\" ref={this.itemSort}>\r\n                            <option value=\"TimeAsc\">Time: Oldest to Newest</option>\r\n                            <option value=\"TimeDes\">Time: Newest to Oldest</option>\r\n                            <option value=\"PriorityAsc\">Priority: High to Low</option>\r\n                            <option value=\"PriorityDes\">Priority: Low to High</option>\r\n                            {/* <option value=\"PriorityAsc\">Priority: Low to High</option> */}\r\n                            {/* Add an option for time submitted */}\r\n                        </select>\r\n                        <button type=\"submit\">Sort!</button>\r\n                    </form>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, {Component} from 'react';\r\n\r\nclass Item extends Component {\r\n\r\n    // componentDidMount() {\r\n    // }\r\n\r\n    componentWillUnmount() {\r\n        if (this.props.lengthMinusOne <= 5) {\r\n            this.props.showHideFunc(false);\r\n        }\r\n    }\r\n\r\n    numbertoItem = (num) => {\r\n        if (num === 1) {\r\n            return \"Low\";\r\n        } else if (num === 2) {\r\n            return \"Medium\";\r\n        } else {\r\n            return \"High\";\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const priority = this.numbertoItem(this.props.priority);\r\n        //const lnOvrNum = this.props.length >= 2 ? \"overNum\" : '';\r\n        //const showHideItem = this.props.index >= 2 ? \"hide\" : \"\";\r\n        const showHideItem = (() => {\r\n            if (this.props.index >= 5 && this.props.btnOpen === false) {\r\n                return \"hide\";\r\n            } else {\r\n                return \"\";\r\n            }\r\n        })();\r\n        // const showHideItem = (() => {\r\n        //     if (this.props.index >= 2) {\r\n        //         return \"hide\";\r\n        //     } else {\r\n        //         return \"\";\r\n        //     }\r\n        // })();\r\n        const classes = `${priority} ${showHideItem} item`;\r\n        return(\r\n            <div id={this.props.id} className={classes}>\r\n                <div className=\"itemDesc\">\r\n                    <p className=\"itemDesc\">{this.props.desc}</p>\r\n                </div>\r\n                <div className=\"itemTime\">\r\n                    <p>{this.props.time}</p>\r\n                </div>\r\n                <div className=\"removeIcon\" onClick={() =>this.props.removeItem(this.props.id)}>\r\n                    <span>&times;</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Item;","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return(\r\n            <footer>\r\n                <h2>Foo</h2>\r\n            </footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;\r\n","import React, {Component} from 'react';\r\n\r\nclass ShowMore extends Component {\r\n\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     this.state = {\r\n    //         showMore: false\r\n    //     }\r\n    //     this.handleShowMore = this.handleShowMore.bind(this);\r\n    // }\r\n\r\n    // handleShowMore = () => {\r\n    //     if (this.props.length > 2) {\r\n    //       this.setState({showMore: true});\r\n    //     } else {\r\n    //       this.setState({showMore: false});\r\n    //     }\r\n    // }\r\n    \r\n\r\n    // showOnAdd() {\r\n    //     console.log(\"wut\");\r\n    //         this.props.showHideFunc(\"show\");\r\n    //     } else {\r\n    //         this.props.showHideFunc(\"hide\");\r\n    //     }\r\n    // }\r\n\r\n    // h3 = React.createRef();\r\n\r\n    // this.h3.innerText = \"sadf\";\r\n\r\n    render() {\r\n\r\n        return(\r\n            <article id=\"showMore\" className={this.props.disp ? \"show\" : \"hide\"} onClick={this.props.showItemFunc}>\r\n                <h3>{this.props.clicked ? \"Hide\" : \"Show\"} \r\n                    <span> {this.props.length - 5}</span> More\r\n                </h3>\r\n            </article>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShowMore;","import React, { Component } from 'react';\nimport Header from './app/components/Header';\nimport Item from './app/components/Item';\nimport Footer from './app/components/Footer';\nimport ShowMore from './app/components/ShowMore';\nimport './scss/App.scss';\n\nclass App extends Component {\n\n  state = {\n    list: [\n      // {\n      //   desc: \"Hello World\",\n      //   priority: 1,\n      //   id: 1\n      // },\n      // {\n      //   desc: \"test\",\n      //   priority: 3,\n      //   id: 2\n      // },\n      // {\n      //   desc: \"wut\",\n      //   priority: 2,\n      //   id: 3\n      // },\n\n    ],\n    showMoreBtn: false,\n    btnOpen: false \n  };\n\n  prevListItemId = 0;\n\n  handleRemoveItem = (id) => {\n    this.setState( prevState => {\n      return {\n        list: prevState.list.filter(l => l.id !== id)\n      };\n    })\n  }\n\n  handleAddItem = (listItem, itemPriority, time) => {\n    this.setState(prevState => {\n      return {\n        list: [\n          ...prevState.list,\n          {\n            desc: listItem,\n            priority: itemPriority,\n            itemTime: time,\n            id: this.prevListItemId++\n          }\n        ]\n      }\n    });\n  }\n\n  handleShowMore = (bool) => {\n    if (bool === true) {\n      this.setState({showMoreBtn: true});\n    } else {\n      this.setState({showMoreBtn: false});\n    }\n  }\n\n  showItems = () => {\n    //console.log(\"hey\");\n    if (this.state.btnOpen === false) {\n        this.setState({btnOpen: true});\n    } else {\n        this.setState({btnOpen: false});\n    }\n  }\n\n\n  handleSortList = (value) => {\n    this.setState(prevState => {\n      if (value === \"PriorityAsc\") {\n        return {\n          list: prevState.list.sort((a,b) => {\n            return b.priority - a.priority;\n          })\n        }\n      } else if (value === \"PriorityDes\") {\n        return {\n          list: prevState.list.sort((a,b) => {\n            return a.priority - b.priority;\n          })\n        }\n      } else if (value === \"TimeAsc\") {\n          return {\n            list: prevState.list.sort((a,b) => {\n              //console.log(Date.parse(`01/01/2013 ${a.itemTime}`), Date.parse(`01/01/2013 ${b.itemTime}`));\n              return Date.parse(`01/01/2013 ${a.itemTime}`) - Date.parse(`01/01/2013 ${b.itemTime}`)\n            })\n          }\n      } else if (value === \"TimeDes\") {\n          return {\n            list: prevState.list.sort((a,b) => {\n              //return Date.parse('01/01/2013' + b.itemTime) - Date.parse('01/01/2013' + a.itemTime);\n              return Date.parse(`01/01/2013 ${b.itemTime}`) - Date.parse(`01/01/2013 ${a.itemTime}`)\n            })\n          }\n      }\n    });\n  }\n \n  render() {\n    return (\n      <div className=\"App\">\n        <Header \n          count = {this.state.list.length}\n          addItem = {this.handleAddItem}\n          sortItem={this.handleSortList}\n          length={this.state.list.length}\n          showHideFunc={this.handleShowMore}\n        />\n        {this.state.list.map( (item, index) => \n          <Item \n            desc = {item.desc}\n            priority={item.priority}\n            id={item.id}\n            key={item.id.toString()}\n            time={item.itemTime}\n            index={index}\n            removeItem={this.handleRemoveItem}\n            showHideFunc={this.handleShowMore}\n            length={this.state.list.length}\n            lengthMinusOne={this.state.list.length - 1}\n            btnOpen={this.state.btnOpen}\n          />\n        )}\n        <ShowMore \n          disp={this.state.showMoreBtn} \n          length={this.state.list.length}\n          showHideFunc={this.handleShowMore}\n          clicked={this.state.btnOpen}\n          showItemFunc = {this.showItems}\n        />\n        <Footer />\n      </div>\n    );\n  \n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}